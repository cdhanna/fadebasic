//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /Users/chrishanna/Documents/Github/dby/DarkBasicYo/DarkBasicYo/AntlrStuff/DarkBasicYo.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace DarkBasicYoAntlr {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
[System.CLSCompliant(false)]
public partial class DarkBasicYoLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, VARIABLE=22, NUMBER=23, STRING_LITERAL=24, 
		WS=25;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "VARIABLE", "NUMBER", "STRING_LITERAL", 
		"WS"
	};


	public DarkBasicYoLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public DarkBasicYoLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'Print'", "'WaitKey'", "'('", "')'", "'='", "'For'", "'To'", "'Next'", 
		"'If'", "'Then'", "'EndIf'", "'<'", "'>'", "'<='", "'>='", "'=='", "'<>'", 
		"'+'", "'-'", "'*'", "'/'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, "VARIABLE", 
		"NUMBER", "STRING_LITERAL", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "DarkBasicYo.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static DarkBasicYoLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,25,149,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,
		1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,5,1,5,1,6,1,6,1,
		6,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,
		10,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,13,1,14,1,14,1,14,1,15,1,
		15,1,15,1,16,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,
		21,5,21,124,8,21,10,21,12,21,127,9,21,1,22,4,22,130,8,22,11,22,12,22,131,
		1,23,1,23,5,23,136,8,23,10,23,12,23,139,9,23,1,23,1,23,1,24,4,24,144,8,
		24,11,24,12,24,145,1,24,1,24,0,0,25,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,
		17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,
		41,21,43,22,45,23,47,24,49,25,1,0,5,2,0,65,90,97,122,3,0,48,57,65,90,97,
		122,1,0,48,57,3,0,10,10,13,13,34,34,3,0,9,10,13,13,32,32,152,0,1,1,0,0,
		0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,
		0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,
		0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,
		1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,
		0,0,47,1,0,0,0,0,49,1,0,0,0,1,51,1,0,0,0,3,57,1,0,0,0,5,65,1,0,0,0,7,67,
		1,0,0,0,9,69,1,0,0,0,11,71,1,0,0,0,13,75,1,0,0,0,15,78,1,0,0,0,17,83,1,
		0,0,0,19,86,1,0,0,0,21,91,1,0,0,0,23,97,1,0,0,0,25,99,1,0,0,0,27,101,1,
		0,0,0,29,104,1,0,0,0,31,107,1,0,0,0,33,110,1,0,0,0,35,113,1,0,0,0,37,115,
		1,0,0,0,39,117,1,0,0,0,41,119,1,0,0,0,43,121,1,0,0,0,45,129,1,0,0,0,47,
		133,1,0,0,0,49,143,1,0,0,0,51,52,5,80,0,0,52,53,5,114,0,0,53,54,5,105,
		0,0,54,55,5,110,0,0,55,56,5,116,0,0,56,2,1,0,0,0,57,58,5,87,0,0,58,59,
		5,97,0,0,59,60,5,105,0,0,60,61,5,116,0,0,61,62,5,75,0,0,62,63,5,101,0,
		0,63,64,5,121,0,0,64,4,1,0,0,0,65,66,5,40,0,0,66,6,1,0,0,0,67,68,5,41,
		0,0,68,8,1,0,0,0,69,70,5,61,0,0,70,10,1,0,0,0,71,72,5,70,0,0,72,73,5,111,
		0,0,73,74,5,114,0,0,74,12,1,0,0,0,75,76,5,84,0,0,76,77,5,111,0,0,77,14,
		1,0,0,0,78,79,5,78,0,0,79,80,5,101,0,0,80,81,5,120,0,0,81,82,5,116,0,0,
		82,16,1,0,0,0,83,84,5,73,0,0,84,85,5,102,0,0,85,18,1,0,0,0,86,87,5,84,
		0,0,87,88,5,104,0,0,88,89,5,101,0,0,89,90,5,110,0,0,90,20,1,0,0,0,91,92,
		5,69,0,0,92,93,5,110,0,0,93,94,5,100,0,0,94,95,5,73,0,0,95,96,5,102,0,
		0,96,22,1,0,0,0,97,98,5,60,0,0,98,24,1,0,0,0,99,100,5,62,0,0,100,26,1,
		0,0,0,101,102,5,60,0,0,102,103,5,61,0,0,103,28,1,0,0,0,104,105,5,62,0,
		0,105,106,5,61,0,0,106,30,1,0,0,0,107,108,5,61,0,0,108,109,5,61,0,0,109,
		32,1,0,0,0,110,111,5,60,0,0,111,112,5,62,0,0,112,34,1,0,0,0,113,114,5,
		43,0,0,114,36,1,0,0,0,115,116,5,45,0,0,116,38,1,0,0,0,117,118,5,42,0,0,
		118,40,1,0,0,0,119,120,5,47,0,0,120,42,1,0,0,0,121,125,7,0,0,0,122,124,
		7,1,0,0,123,122,1,0,0,0,124,127,1,0,0,0,125,123,1,0,0,0,125,126,1,0,0,
		0,126,44,1,0,0,0,127,125,1,0,0,0,128,130,7,2,0,0,129,128,1,0,0,0,130,131,
		1,0,0,0,131,129,1,0,0,0,131,132,1,0,0,0,132,46,1,0,0,0,133,137,5,34,0,
		0,134,136,8,3,0,0,135,134,1,0,0,0,136,139,1,0,0,0,137,135,1,0,0,0,137,
		138,1,0,0,0,138,140,1,0,0,0,139,137,1,0,0,0,140,141,5,34,0,0,141,48,1,
		0,0,0,142,144,7,4,0,0,143,142,1,0,0,0,144,145,1,0,0,0,145,143,1,0,0,0,
		145,146,1,0,0,0,146,147,1,0,0,0,147,148,6,24,0,0,148,50,1,0,0,0,5,0,125,
		131,137,145,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace DarkBasicYoAntlr
